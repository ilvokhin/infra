# This role is a little bit different from others, because it is supposed to
# run mostly from localhost to make and copy dotfiles that might be useful on
# this particular machine. There is maybe not enough permissions to install
# software, so we are taking unusual approach here: check if software is
# installed and then bring relevant dotfiles for it.

- name: Configure bash if installed
  tags: bash
  block:
    - name: Check if bash is installed
      ansible.builtin.command: bash --version
      changed_when: false
      failed_when: false
      register: has_bash

    - ansible.builtin.include_role:
        name: bashrc
      vars:
        bashrc_user: '{{ dotfiles_user }}'
        bashrc_group: '{{ dotfiles_group }}'
        bashrc_homedir: '{{ dotfiles_homedir }}'
      when: has_bash.rc == 0

- name: Configure vim if installed
  tags: vim
  block:
    - name: Check if vim is installed
      ansible.builtin.command: vim --version
      changed_when: false
      failed_when: false
      register: has_vim

    - ansible.builtin.include_role:
        name: vimrc
      vars:
        vimrc_user: '{{ dotfiles_user }}'
        vimrc_group: '{{ dotfiles_group }}'
        vimrc_homedir: '{{ dotfiles_homedir }}'
      when: has_vim.rc == 0

- name: Configure screen if installed
  tags: screen
  block:
    - name: Check if screen is installed
      ansible.builtin.command: screen --version
      changed_when: false
      failed_when: false
      register: has_screen

    - ansible.builtin.include_role:
        name: screenrc
      vars:
        screenrc_user: '{{ dotfiles_user }}'
        screenrc_group: '{{ dotfiles_group }}'
        screenrc_homedir: '{{ dotfiles_homedir }}'
        screenrc_jumphost: '{{ dotfiles_jumphost }}'
      when: has_screen.rc == 0

- name: Configure ssh if installed
  tags: ssh
  block:
    - name: Check if ssh is installed
      ansible.builtin.command: ssh -V
      changed_when: false
      failed_when: false
      register: has_ssh

    - ansible.builtin.include_role:
        name: sshconfig
      vars:
        sshconfig_user: '{{ dotfiles_user }}'
        sshconfig_group: '{{ dotfiles_group }}'
        sshconfig_homedir: '{{ dotfiles_homedir }}'
        sshconfig_jumphost: '{{ dotfiles_jumphost }}'
      when: has_ssh.rc == 0

- name: Configure wireguard if installed
  tags: wireguard
  block:
    - name: Check if wireguard is installed
      ansible.builtin.command: wg --version
      changed_when: false
      failed_when: false
      register: has_wireguard

    - name: Get actual hostname
      ansible.builtin.command: hostname
      changed_when: false
      failed_when: false
      register: hostname

    - ansible.builtin.include_role:
        name: wgconfig
      vars:
        wgconfig_user: '{{ dotfiles_user }}'
        wgconfig_group: '{{ dotfiles_group }}'
        wgconfig_homedir: '{{ dotfiles_homedir }}'
      when: has_wireguard.rc == 0 and hostname.stdout == "silver"

- name: Configure git if installed
  tags: git
  block:
    - name: Check if git is installed
      ansible.builtin.command: git --version
      changed_when: false
      failed_when: false
      register: has_git

    - ansible.builtin.include_role:
        name: gitconfig
      vars:
        gitconfig_user: '{{ dotfiles_user }}'
        gitconfig_group: '{{ dotfiles_group }}'
        gitconfig_homedir: '{{ dotfiles_homedir }}'
      when: has_git.rc == 0

- name: Configure gdb if installed
  tags: gdb
  block:
    - name: Check if gdb is installed
      ansible.builtin.command: gdb --version
      changed_when: false
      failed_when: false
      register: has_gdb

    - ansible.builtin.include_role:
        name: gdbinit
      vars:
        gdbinit_user: '{{ dotfiles_user }}'
        gdbinit_group: '{{ dotfiles_group }}'
        gdbinit_homedir: '{{ dotfiles_homedir }}'
      when: has_gdb.rc == 0

- name: Configure mutt if installed
  tags: mutt
  block:
    - name: Check if mutt is installed
      ansible.builtin.command: mutt -v
      changed_when: false
      failed_when: false
      register: has_mutt

    - ansible.builtin.include_role:
        name: muttrc
      vars:
        muttrc_user: '{{ dotfiles_user }}'
        muttrc_group: '{{ dotfiles_group }}'
        muttrc_homedir: '{{ dotfiles_homedir }}'
      when: has_mutt.rc == 0

- name: Configure go if installed
  tags: go
  block:
    - name: Check if go is installed
      ansible.builtin.command: go version
      changed_when: false
      failed_when: false
      register: has_go

    - ansible.builtin.include_role:
        name: goenv
      vars:
        goenv_user: '{{ dotfiles_user }}'
        goenv_group: '{{ dotfiles_group }}'
        goenv_homedir: '{{ dotfiles_homedir }}'
      when: has_go.rc == 0

- name: Copy templates files if necessary
  tags: templates
  block:
    - name: Check if C++ compiler is installed
      ansible.builtin.command: c++ --version
      changed_when: false
      failed_when: false
      register: has_cpp

    - name: Check if Python is installed
      ansible.builtin.command: python --version
      changed_when: false
      failed_when: false
      register: has_python

    - name: Setup templates directory
      ansible.builtin.file:
        path: '{{ dotfiles_homedir }}/.templates'
        state: directory
        owner: '{{ dotfiles_user }}'
        group: '{{ dotfiles_group }}'
        mode: u+rw,g+r,o+r
      when: has_cpp.rc == 0 or has_python.rc == 0

    - name: Copy template.cpp to home directory
      ansible.builtin.copy:
        src: misc/dotfiles/templates/template.cpp
        dest: '{{ dotfiles_homedir }}/.templates/template.cpp'
        owner: '{{ dotfiles_user }}'
        group: '{{ dotfiles_group }}'
        mode: u+rw,g+r,o+r
      when: has_cpp.rc == 0

    - name: Copy benchmark.cpp to home directory
      ansible.builtin.copy:
        src: misc/dotfiles/templates/benchmark.cpp
        dest: '{{ dotfiles_homedir }}/.templates/benchmark.cpp'
        owner: '{{ dotfiles_user }}'
        group: '{{ dotfiles_group }}'
        mode: u+rw,g+r,o+r
      when: has_cpp.rc == 0

    - name: Copy template.py to home directory
      ansible.builtin.copy:
        src: misc/dotfiles/templates/template.py
        dest: '{{ dotfiles_homedir }}/.templates/template.py'
        owner: '{{ dotfiles_user }}'
        group: '{{ dotfiles_group }}'
        mode: u+rw,g+r,o+r
      when: has_python.rc == 0
